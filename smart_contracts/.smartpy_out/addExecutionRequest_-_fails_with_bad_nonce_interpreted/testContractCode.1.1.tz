parameter (or (unit %default) (int %replace));
storage   (pair (address %admin) (int %storedValue));
code
  {
    DUP;        # pair @parameter @storage : pair @parameter @storage
    CDR;        # @storage : pair @parameter @storage
    SWAP;       # pair @parameter @storage : @storage
    CAR;        # @parameter : @storage
    IF_LEFT
      {
        DROP;       # @storage
        # == default == # @storage
      }
      {
        SWAP;       # @storage : @parameter%replace
        # == replace ==
        # sp.verify(sp.sender == self.data.admin, message = 'NOT_ADMIN') # @storage : @parameter%replace
        DUP;        # @storage : @storage : @parameter%replace
        DUG 2;      # @storage : @parameter%replace : @storage
        CAR;        # address : @parameter%replace : @storage
        SENDER;     # address : address : @parameter%replace : @storage
        COMPARE;    # int : @parameter%replace : @storage
        EQ;         # bool : @parameter%replace : @storage
        IF
          {}
          {
            PUSH string "NOT_ADMIN"; # string : @parameter%replace : @storage
            FAILWITH;   # FAILED
          }; # @parameter%replace : @storage
        SWAP;       # @storage : @parameter%replace
        # self.data.storedValue = params # @storage : @parameter%replace
        CAR;        # address : @parameter%replace
        PAIR;       # pair address @parameter%replace
      }; # @storage
    NIL operation; # list operation : @storage
    PAIR;       # pair (list operation) @storage
  };