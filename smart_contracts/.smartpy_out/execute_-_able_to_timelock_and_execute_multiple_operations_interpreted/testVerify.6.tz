parameter (pair (pair %k0 (pair (nat %nonce) (list %operator_public_keys key)) (pair (nat %signers_threshold) (pair (big_map %timelock nat (pair timestamp (lambda unit (list operation)))) (nat %timelock_seconds)))) (pair %k1 (address %admin) (nat %storedValue)));
storage   unit;
code
  {
    DUP;        # pair @parameter @storage : pair @parameter @storage
    CDR;        # @storage : pair @parameter @storage
    SWAP;       # pair @parameter @storage : @storage
    CAR;        # @parameter : @storage
    # == verify ==
    # sp.verify((params.k0.timelock.contains(2)) == True) # @parameter : @storage
    CAR;        # pair (pair (nat %nonce) (list %operator_public_keys key)) (pair (nat %signers_threshold) (pair (big_map %timelock nat (pair timestamp (lambda unit (list operation)))) (nat %timelock_seconds))) : @storage
    CDR;        # pair (nat %signers_threshold) (pair (big_map %timelock nat (pair timestamp (lambda unit (list operation)))) (nat %timelock_seconds)) : @storage
    CDR;        # pair (big_map %timelock nat (pair timestamp (lambda unit (list operation)))) (nat %timelock_seconds) : @storage
    CAR;        # big_map nat (pair timestamp (lambda unit (list operation))) : @storage
    PUSH bool True; # bool : big_map nat (pair timestamp (lambda unit (list operation))) : @storage
    SWAP;       # big_map nat (pair timestamp (lambda unit (list operation))) : bool : @storage
    PUSH nat 2; # nat : big_map nat (pair timestamp (lambda unit (list operation))) : bool : @storage
    MEM;        # bool : bool : @storage
    COMPARE;    # int : @storage
    EQ;         # bool : @storage
    IF
      {}
      {
        PUSH string "WrongCondition: (params.k0.timelock.contains(2)) == True"; # string : @storage
        FAILWITH;   # FAILED
      }; # @storage
    NIL operation; # list operation : @storage
    PAIR;       # pair (list operation) @storage
  };