[{"shortname": "addExecutionRequest_-_succeeds_with_all_signatures", "longname": "addExecutionRequest - succeeds with all signatures", "scenario": [{"action": "newContract", "id": 0, "export": "(storage (record 54 (nonce (literal (nat 0) 55)) (operator_public_keys (list 54 (reduce (attr (account_of_seed \"alice\" 150) \"public_key\" 150) 150) (reduce (attr (account_of_seed \"bob\" 151) \"public_key\" 151) 151) (reduce (attr (account_of_seed \"charlie\" 152) \"public_key\" 152) 152) (reduce (attr (account_of_seed \"dan\" 153) \"public_key\" 153) 153) (reduce (attr (account_of_seed \"eve\" 154) \"public_key\" 154) 154))) (signers_threshold (literal (intOrNat 3) 54)) (timelock (type_annotation (big_map 63 ) (bigmap \"nat\" (tuple \"timestamp\" (lambda \"unit\" (list \"operation\")))) 63)) (timelock_seconds (literal (nat 3600) 51)))\nstorage_type (())\nmessages ((addExecutionRequest True ((set_type (params 74) (tuple (map \"key_hash\" \"signature\") (tuple \"chain_id\" (tuple \"nat\" (lambda \"unit\" (list \"operation\"))))) 76) (match_tuple 77 (params 74) \"match_pair_77_fst\" \"match_pair_77_snd\") (match_tuple 80 (variant_arg \"match_pair_77_snd\" 77) \"match_pair_80_fst\" \"match_pair_80_snd\") (match_tuple 81 (variant_arg \"match_pair_80_snd\" 80) \"match_pair_81_fst\" \"match_pair_81_snd\") (verify (eq (pack (type_annotation (variant_arg \"match_pair_80_fst\" 80) (unknown 1) 84) 84) (pack (type_annotation (chain_id) (unknown 1) 84) 84) 84) (literal (string \"BAD_CHAIN_ID\") 84) 84) (verify (eq (variant_arg \"match_pair_81_fst\" 81) (add (attr (data) \"nonce\" 87) (literal (intOrNat 1) 87) 87) 87) (literal (string \"BAD_NONCE\") 87) 87) (defineLocal \"valid_signatures_counter\" (literal (nat 0) 90) 90) (forGroup \"operator_public_key\" (attr (data) \"operator_public_keys\" 91) ((verify (contains (variant_arg \"match_pair_77_fst\" 77) (hash_key (iter \"operator_public_key\" 91) 93) 94) (literal (string \"BAD_OP\") 94) 94) (verify (check_signature (iter \"operator_public_key\" 91) (getItem (variant_arg \"match_pair_77_fst\" 77) (hash_key (iter \"operator_public_key\" 91) 93) 95) (pack (variant_arg \"match_pair_77_snd\" 77) 95) 95) (literal (string \"BAD_SIG\") 95) 95) (set (getLocal \"valid_signatures_counter\" 162) (add (getLocal \"valid_signatures_counter\" 96) (literal (intOrNat 1) 96) 96) 96)) 91) (verify (ge (getLocal \"valid_signatures_counter\" 99) (attr (data) \"signers_threshold\" 99) 99) (literal (string \"TOO_FEW_SIGS\") 99) 99) (set (attr (data) \"nonce\" 87) (add (attr (data) \"nonce\" 87) (literal (intOrNat 1) 102) 102) 102) (set (getItem (attr (data) \"timelock\" 105) (attr (data) \"nonce\" 87) 105) (tuple 105 (now) (variant_arg \"match_pair_81_snd\" 81)) 105))) (execute True ((match_tuple 114 (getItem (attr (data) \"timelock\" 105) (params 111) 113) \"match_pair_114_fst\" \"match_pair_114_snd\") (verify (lt (add_seconds (variant_arg \"match_pair_114_fst\" 114) (toInt (attr (data) \"timelock_seconds\" 117) 117) 117) (now) 118) (literal (string \"TOO_EARLY\") 118) 118) (delItem (attr (data) \"timelock\" 105) (params 111) 121) (set_type (call_lambda (variant_arg \"match_pair_114_snd\" 114) (unit) 124) (list \"operation\") 125) (forGroup \"op\" (call_lambda (variant_arg \"match_pair_114_snd\" 114) (unit) 124) ((set (operations 126) (cons (iter \"op\" 126) (operations 126) 126) 126)) 126))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 162, "show": true, "accept_unknown_types": false}, {"action": "newContract", "id": 1, "export": "(storage (record 134 (admin (literal (local-address 0) 54)) (storedValue (literal (intOrNat 0) 134)))\nstorage_type (())\nmessages ((default True ()) (replace True ((verify (eq (sender) (attr (data) \"admin\" 142) 142) (literal (string \"NOT_ADMIN\") 142) 142) (set (attr (data) \"storedValue\" 143) (params 141) 143))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 169, "show": true, "accept_unknown_types": false}, {"action": "message", "id": 0, "message": "addExecutionRequest", "params": "(tuple 199 (map 199 ((reduce (attr (account_of_seed \"alice\" 150) \"public_key_hash\" 150) 150) (reduce (make_signature (reduce (attr (account_of_seed \"alice\" 150) \"secret_key\" 150) 150) (pack (tuple 181 (literal (chain_id_cst \"0x9caecab9\") 165) (tuple 181 (literal (intOrNat 1) 181) (lambda 0 \"\" 181 ((set_type (lambdaParams 0 \"\" 181 (unknown 5)) \"unit\" 174) (result (list 176 (transfer (literal (intOrNat 1) 176) (literal (mutez 0) 176) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 134) 175) \"Some\" \"None\" 175) 176)) 176))))) 181) \"Raw\" 183) 183)) ((reduce (attr (account_of_seed \"bob\" 151) \"public_key_hash\" 151) 151) (reduce (make_signature (reduce (attr (account_of_seed \"bob\" 151) \"secret_key\" 151) 151) (pack (tuple 181 (literal (chain_id_cst \"0x9caecab9\") 165) (tuple 181 (literal (intOrNat 1) 181) (lambda 0 \"\" 181 ((set_type (lambdaParams 0 \"\" 181 (unknown 5)) \"unit\" 174) (result (list 176 (transfer (literal (intOrNat 1) 176) (literal (mutez 0) 176) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 134) 175) \"Some\" \"None\" 175) 176)) 176))))) 181) \"Raw\" 184) 184)) ((reduce (attr (account_of_seed \"charlie\" 152) \"public_key_hash\" 152) 152) (reduce (make_signature (reduce (attr (account_of_seed \"charlie\" 152) \"secret_key\" 152) 152) (pack (tuple 181 (literal (chain_id_cst \"0x9caecab9\") 165) (tuple 181 (literal (intOrNat 1) 181) (lambda 0 \"\" 181 ((set_type (lambdaParams 0 \"\" 181 (unknown 5)) \"unit\" 174) (result (list 176 (transfer (literal (intOrNat 1) 176) (literal (mutez 0) 176) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 134) 175) \"Some\" \"None\" 175) 176)) 176))))) 181) \"Raw\" 185) 185)) ((reduce (attr (account_of_seed \"dan\" 153) \"public_key_hash\" 153) 153) (reduce (make_signature (reduce (attr (account_of_seed \"dan\" 153) \"secret_key\" 153) 153) (pack (tuple 181 (literal (chain_id_cst \"0x9caecab9\") 165) (tuple 181 (literal (intOrNat 1) 181) (lambda 0 \"\" 181 ((set_type (lambdaParams 0 \"\" 181 (unknown 5)) \"unit\" 174) (result (list 176 (transfer (literal (intOrNat 1) 176) (literal (mutez 0) 176) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 134) 175) \"Some\" \"None\" 175) 176)) 176))))) 181) \"Raw\" 186) 186)) ((reduce (attr (account_of_seed \"eve\" 154) \"public_key_hash\" 154) 154) (reduce (make_signature (reduce (attr (account_of_seed \"eve\" 154) \"secret_key\" 154) 154) (pack (tuple 181 (literal (chain_id_cst \"0x9caecab9\") 165) (tuple 181 (literal (intOrNat 1) 181) (lambda 0 \"\" 181 ((set_type (lambdaParams 0 \"\" 181 (unknown 5)) \"unit\" 174) (result (list 176 (transfer (literal (intOrNat 1) 176) (literal (mutez 0) 176) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 134) 175) \"Some\" \"None\" 175) 176)) 176))))) 181) \"Raw\" 187) 187))) (tuple 199 (literal (chain_id_cst \"0x9caecab9\") 165) (tuple 199 (literal (intOrNat 1) 199) (lambda 1 \"\" 199 ((set_type (lambdaParams 1 \"\" 199 (unknown 6)) \"unit\" 174) (result (list 176 (transfer (literal (intOrNat 1) 176) (literal (mutez 0) 176) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 134) 175) \"Some\" \"None\" 175) 176)) 176))))))", "line_no": 199, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "(literal (chain_id_cst \"0x9caecab9\") 165)", "time": "(literal (timestamp 123) 198)", "amount": "(literal (mutez 0) 1)", "level": "(literal (intOrNat 0) 199)", "show": true, "valid": "(literal (bool True) 199)", "voting_powers": "(map 199 )"}, {"action": "verify", "condition": "(contains (attr (contractData 0 199) \"timelock\" 205) (literal (intOrNat 1) 205) 205)", "line_no": 205}, {"action": "verify", "condition": "(eq (first (getItem (attr (contractData 0 199) \"timelock\" 205) (literal (intOrNat 1) 208) 208) 209) (literal (timestamp 123) 198) 209)", "line_no": 209}]}]