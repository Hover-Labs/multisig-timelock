[{"shortname": "addExecutionRequest_-_succeeds_with_all_signatures", "longname": "addExecutionRequest - succeeds with all signatures", "scenario": [{"action": "newContract", "id": 0, "export": "(storage (record 54 (nonce (literal (nat 0) 55)) (operator_public_keys (list 54 (reduce (attr (account_of_seed \"alice\" 187) \"public_key\" 187) 187) (reduce (attr (account_of_seed \"bob\" 188) \"public_key\" 188) 188) (reduce (attr (account_of_seed \"charlie\" 189) \"public_key\" 189) 189) (reduce (attr (account_of_seed \"dan\" 190) \"public_key\" 190) 190) (reduce (attr (account_of_seed \"eve\" 191) \"public_key\" 191) 191))) (signers_threshold (literal (intOrNat 3) 54)) (timelock (type_annotation (big_map 63 ) (bigmap \"nat\" (tuple \"timestamp\" (lambda \"unit\" (list \"operation\")))) 63)) (timelock_seconds (literal (nat 3600) 51)))\nstorage_type (())\nmessages ((addExecutionRequest True ((set_type (params 111) (tuple (map \"key_hash\" \"signature\") (tuple \"chain_id\" (tuple \"nat\" (lambda \"unit\" (list \"operation\"))))) 113) (match_tuple 114 (params 111) \"match_pair_114_fst\" \"match_pair_114_snd\") (match_tuple 117 (variant_arg \"match_pair_114_snd\" 114) \"match_pair_117_fst\" \"match_pair_117_snd\") (match_tuple 118 (variant_arg \"match_pair_117_snd\" 117) \"match_pair_118_fst\" \"match_pair_118_snd\") (verify (eq (pack (type_annotation (variant_arg \"match_pair_117_fst\" 117) (unknown 1) 121) 121) (pack (type_annotation (chain_id) (unknown 1) 121) 121) 121) (literal (string \"BAD_CHAIN_ID\") 121) 121) (verify (eq (variant_arg \"match_pair_118_fst\" 118) (add (attr (data) \"nonce\" 124) (literal (intOrNat 1) 124) 124) 124) (literal (string \"BAD_NONCE\") 124) 124) (defineLocal \"valid_signatures_counter\" (literal (nat 0) 127) 127) (forGroup \"operator_public_key\" (attr (data) \"operator_public_keys\" 128) ((ifBlock (contains (variant_arg \"match_pair_114_fst\" 114) (hash_key (iter \"operator_public_key\" 128) 130) 131) ((ifBlock (check_signature (iter \"operator_public_key\" 128) (getItem (variant_arg \"match_pair_114_fst\" 114) (hash_key (iter \"operator_public_key\" 128) 130) 132) (pack (variant_arg \"match_pair_114_snd\" 114) 132) 132) ((set (getLocal \"valid_signatures_counter\" 199) (add (getLocal \"valid_signatures_counter\" 133) (literal (intOrNat 1) 133) 133) 133)) 132)) 131)) 128) (verify (ge (getLocal \"valid_signatures_counter\" 136) (attr (data) \"signers_threshold\" 136) 136) (literal (string \"TOO_FEW_SIGS\") 136) 136) (set (attr (data) \"nonce\" 124) (add (attr (data) \"nonce\" 124) (literal (intOrNat 1) 139) 139) 139) (set (getItem (attr (data) \"timelock\" 142) (attr (data) \"nonce\" 124) 142) (tuple 142 (now) (variant_arg \"match_pair_118_snd\" 118)) 142))) (execute True ((match_tuple 151 (getItem (attr (data) \"timelock\" 142) (params 148) 150) \"match_pair_151_fst\" \"match_pair_151_snd\") (verify (lt (add_seconds (variant_arg \"match_pair_151_fst\" 151) (toInt (attr (data) \"timelock_seconds\" 154) 154) 154) (now) 155) (literal (string \"TOO_EARLY\") 155) 155) (delItem (attr (data) \"timelock\" 142) (params 148) 158) (set_type (call_lambda (variant_arg \"match_pair_151_snd\" 151) (unit) 161) (list \"operation\") 162) (forGroup \"op\" (call_lambda (variant_arg \"match_pair_151_snd\" 151) (unit) 161) ((set (operations 163) (cons (iter \"op\" 163) (operations 163) 163) 163)) 163))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 199, "show": true, "accept_unknown_types": false}, {"action": "newContract", "id": 1, "export": "(storage (record 171 (admin (literal (local-address 0) 54)) (storedValue (literal (intOrNat 0) 171)))\nstorage_type (())\nmessages ((default True ()) (replace True ((verify (eq (sender) (attr (data) \"admin\" 179) 179) (literal (string \"NOT_ADMIN\") 179) 179) (set (attr (data) \"storedValue\" 180) (params 178) 180))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 206, "show": true, "accept_unknown_types": false}, {"action": "message", "id": 0, "message": "addExecutionRequest", "params": "(tuple 236 (map 236 ((reduce (attr (account_of_seed \"alice\" 187) \"public_key_hash\" 187) 187) (reduce (make_signature (reduce (attr (account_of_seed \"alice\" 187) \"secret_key\" 187) 187) (pack (tuple 218 (literal (chain_id_cst \"0x9caecab9\") 202) (tuple 218 (literal (intOrNat 1) 218) (lambda 0 \"\" 218 ((set_type (lambdaParams 0 \"\" 218 (unknown 5)) \"unit\" 211) (result (list 213 (transfer (literal (intOrNat 1) 213) (literal (mutez 0) 213) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 212) \"Some\" \"None\" 212) 213)) 213))))) 218) \"Raw\" 220) 220)) ((reduce (attr (account_of_seed \"bob\" 188) \"public_key_hash\" 188) 188) (reduce (make_signature (reduce (attr (account_of_seed \"bob\" 188) \"secret_key\" 188) 188) (pack (tuple 218 (literal (chain_id_cst \"0x9caecab9\") 202) (tuple 218 (literal (intOrNat 1) 218) (lambda 0 \"\" 218 ((set_type (lambdaParams 0 \"\" 218 (unknown 5)) \"unit\" 211) (result (list 213 (transfer (literal (intOrNat 1) 213) (literal (mutez 0) 213) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 212) \"Some\" \"None\" 212) 213)) 213))))) 218) \"Raw\" 221) 221)) ((reduce (attr (account_of_seed \"charlie\" 189) \"public_key_hash\" 189) 189) (reduce (make_signature (reduce (attr (account_of_seed \"charlie\" 189) \"secret_key\" 189) 189) (pack (tuple 218 (literal (chain_id_cst \"0x9caecab9\") 202) (tuple 218 (literal (intOrNat 1) 218) (lambda 0 \"\" 218 ((set_type (lambdaParams 0 \"\" 218 (unknown 5)) \"unit\" 211) (result (list 213 (transfer (literal (intOrNat 1) 213) (literal (mutez 0) 213) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 212) \"Some\" \"None\" 212) 213)) 213))))) 218) \"Raw\" 222) 222)) ((reduce (attr (account_of_seed \"dan\" 190) \"public_key_hash\" 190) 190) (reduce (make_signature (reduce (attr (account_of_seed \"dan\" 190) \"secret_key\" 190) 190) (pack (tuple 218 (literal (chain_id_cst \"0x9caecab9\") 202) (tuple 218 (literal (intOrNat 1) 218) (lambda 0 \"\" 218 ((set_type (lambdaParams 0 \"\" 218 (unknown 5)) \"unit\" 211) (result (list 213 (transfer (literal (intOrNat 1) 213) (literal (mutez 0) 213) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 212) \"Some\" \"None\" 212) 213)) 213))))) 218) \"Raw\" 223) 223)) ((reduce (attr (account_of_seed \"eve\" 191) \"public_key_hash\" 191) 191) (reduce (make_signature (reduce (attr (account_of_seed \"eve\" 191) \"secret_key\" 191) 191) (pack (tuple 218 (literal (chain_id_cst \"0x9caecab9\") 202) (tuple 218 (literal (intOrNat 1) 218) (lambda 0 \"\" 218 ((set_type (lambdaParams 0 \"\" 218 (unknown 5)) \"unit\" 211) (result (list 213 (transfer (literal (intOrNat 1) 213) (literal (mutez 0) 213) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 212) \"Some\" \"None\" 212) 213)) 213))))) 218) \"Raw\" 224) 224))) (tuple 236 (literal (chain_id_cst \"0x9caecab9\") 202) (tuple 236 (literal (intOrNat 1) 236) (lambda 1 \"\" 236 ((set_type (lambdaParams 1 \"\" 236 (unknown 6)) \"unit\" 211) (result (list 213 (transfer (literal (intOrNat 1) 213) (literal (mutez 0) 213) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 212) \"Some\" \"None\" 212) 213)) 213))))))", "line_no": 236, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "(literal (chain_id_cst \"0x9caecab9\") 202)", "time": "(literal (timestamp 123) 235)", "amount": "(literal (mutez 0) 1)", "level": "(literal (intOrNat 0) 236)", "show": true, "valid": "(literal (bool True) 236)", "voting_powers": "(map 236 )"}, {"action": "verify", "condition": "(contains (attr (contractData 0 236) \"timelock\" 242) (literal (intOrNat 1) 242) 242)", "line_no": 242}, {"action": "verify", "condition": "(eq (first (getItem (attr (contractData 0 236) \"timelock\" 242) (literal (intOrNat 1) 245) 245) 246) (literal (timestamp 123) 235) 246)", "line_no": 246}]}, {"shortname": "addExecutionRequest_-_succeeds_with_threshold_signatures", "longname": "addExecutionRequest - succeeds with threshold signatures", "scenario": [{"action": "newContract", "id": 0, "export": "(storage (record 54 (nonce (literal (nat 0) 55)) (operator_public_keys (list 54 (reduce (attr (account_of_seed \"alice\" 253) \"public_key\" 253) 253) (reduce (attr (account_of_seed \"bob\" 254) \"public_key\" 254) 254) (reduce (attr (account_of_seed \"charlie\" 255) \"public_key\" 255) 255) (reduce (attr (account_of_seed \"dan\" 256) \"public_key\" 256) 256) (reduce (attr (account_of_seed \"eve\" 257) \"public_key\" 257) 257))) (signers_threshold (literal (intOrNat 3) 54)) (timelock (type_annotation (big_map 63 ) (bigmap \"nat\" (tuple \"timestamp\" (lambda \"unit\" (list \"operation\")))) 63)) (timelock_seconds (literal (nat 3600) 51)))\nstorage_type (())\nmessages ((addExecutionRequest True ((set_type (params 111) (tuple (map \"key_hash\" \"signature\") (tuple \"chain_id\" (tuple \"nat\" (lambda \"unit\" (list \"operation\"))))) 113) (match_tuple 114 (params 111) \"match_pair_114_fst\" \"match_pair_114_snd\") (match_tuple 117 (variant_arg \"match_pair_114_snd\" 114) \"match_pair_117_fst\" \"match_pair_117_snd\") (match_tuple 118 (variant_arg \"match_pair_117_snd\" 117) \"match_pair_118_fst\" \"match_pair_118_snd\") (verify (eq (pack (type_annotation (variant_arg \"match_pair_117_fst\" 117) (unknown 7) 121) 121) (pack (type_annotation (chain_id) (unknown 7) 121) 121) 121) (literal (string \"BAD_CHAIN_ID\") 121) 121) (verify (eq (variant_arg \"match_pair_118_fst\" 118) (add (attr (data) \"nonce\" 124) (literal (intOrNat 1) 124) 124) 124) (literal (string \"BAD_NONCE\") 124) 124) (defineLocal \"valid_signatures_counter\" (literal (nat 0) 127) 127) (forGroup \"operator_public_key\" (attr (data) \"operator_public_keys\" 128) ((ifBlock (contains (variant_arg \"match_pair_114_fst\" 114) (hash_key (iter \"operator_public_key\" 128) 130) 131) ((ifBlock (check_signature (iter \"operator_public_key\" 128) (getItem (variant_arg \"match_pair_114_fst\" 114) (hash_key (iter \"operator_public_key\" 128) 130) 132) (pack (variant_arg \"match_pair_114_snd\" 114) 132) 132) ((set (getLocal \"valid_signatures_counter\" 265) (add (getLocal \"valid_signatures_counter\" 133) (literal (intOrNat 1) 133) 133) 133)) 132)) 131)) 128) (verify (ge (getLocal \"valid_signatures_counter\" 136) (attr (data) \"signers_threshold\" 136) 136) (literal (string \"TOO_FEW_SIGS\") 136) 136) (set (attr (data) \"nonce\" 124) (add (attr (data) \"nonce\" 124) (literal (intOrNat 1) 139) 139) 139) (set (getItem (attr (data) \"timelock\" 142) (attr (data) \"nonce\" 124) 142) (tuple 142 (now) (variant_arg \"match_pair_118_snd\" 118)) 142))) (execute True ((match_tuple 151 (getItem (attr (data) \"timelock\" 142) (params 148) 150) \"match_pair_151_fst\" \"match_pair_151_snd\") (verify (lt (add_seconds (variant_arg \"match_pair_151_fst\" 151) (toInt (attr (data) \"timelock_seconds\" 154) 154) 154) (now) 155) (literal (string \"TOO_EARLY\") 155) 155) (delItem (attr (data) \"timelock\" 142) (params 148) 158) (set_type (call_lambda (variant_arg \"match_pair_151_snd\" 151) (unit) 161) (list \"operation\") 162) (forGroup \"op\" (call_lambda (variant_arg \"match_pair_151_snd\" 151) (unit) 161) ((set (operations 163) (cons (iter \"op\" 163) (operations 163) 163) 163)) 163))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 265, "show": true, "accept_unknown_types": false}, {"action": "newContract", "id": 1, "export": "(storage (record 171 (admin (literal (local-address 0) 54)) (storedValue (literal (intOrNat 0) 171)))\nstorage_type (())\nmessages ((default True ()) (replace True ((verify (eq (sender) (attr (data) \"admin\" 179) 179) (literal (string \"NOT_ADMIN\") 179) 179) (set (attr (data) \"storedValue\" 180) (params 178) 180))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 272, "show": true, "accept_unknown_types": false}, {"action": "message", "id": 0, "message": "addExecutionRequest", "params": "(tuple 298 (map 298 ((reduce (attr (account_of_seed \"bob\" 254) \"public_key_hash\" 254) 254) (reduce (make_signature (reduce (attr (account_of_seed \"bob\" 254) \"secret_key\" 254) 254) (pack (tuple 284 (literal (chain_id_cst \"0x9caecab9\") 268) (tuple 284 (literal (intOrNat 1) 284) (lambda 0 \"\" 284 ((set_type (lambdaParams 0 \"\" 284 (unknown 11)) \"unit\" 277) (result (list 279 (transfer (literal (intOrNat 1) 279) (literal (mutez 0) 279) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 278) \"Some\" \"None\" 278) 279)) 279))))) 284) \"Raw\" 286) 286)) ((reduce (attr (account_of_seed \"charlie\" 255) \"public_key_hash\" 255) 255) (reduce (make_signature (reduce (attr (account_of_seed \"charlie\" 255) \"secret_key\" 255) 255) (pack (tuple 284 (literal (chain_id_cst \"0x9caecab9\") 268) (tuple 284 (literal (intOrNat 1) 284) (lambda 0 \"\" 284 ((set_type (lambdaParams 0 \"\" 284 (unknown 11)) \"unit\" 277) (result (list 279 (transfer (literal (intOrNat 1) 279) (literal (mutez 0) 279) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 278) \"Some\" \"None\" 278) 279)) 279))))) 284) \"Raw\" 287) 287)) ((reduce (attr (account_of_seed \"dan\" 256) \"public_key_hash\" 256) 256) (reduce (make_signature (reduce (attr (account_of_seed \"dan\" 256) \"secret_key\" 256) 256) (pack (tuple 284 (literal (chain_id_cst \"0x9caecab9\") 268) (tuple 284 (literal (intOrNat 1) 284) (lambda 0 \"\" 284 ((set_type (lambdaParams 0 \"\" 284 (unknown 11)) \"unit\" 277) (result (list 279 (transfer (literal (intOrNat 1) 279) (literal (mutez 0) 279) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 278) \"Some\" \"None\" 278) 279)) 279))))) 284) \"Raw\" 288) 288))) (tuple 298 (literal (chain_id_cst \"0x9caecab9\") 268) (tuple 298 (literal (intOrNat 1) 298) (lambda 1 \"\" 298 ((set_type (lambdaParams 1 \"\" 298 (unknown 12)) \"unit\" 277) (result (list 279 (transfer (literal (intOrNat 1) 279) (literal (mutez 0) 279) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 278) \"Some\" \"None\" 278) 279)) 279))))))", "line_no": 298, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "(literal (chain_id_cst \"0x9caecab9\") 268)", "time": "(literal (timestamp 123) 297)", "amount": "(literal (mutez 0) 1)", "level": "(literal (intOrNat 0) 298)", "show": true, "valid": "(literal (bool True) 298)", "voting_powers": "(map 298 )"}, {"action": "verify", "condition": "(contains (attr (contractData 0 298) \"timelock\" 304) (literal (intOrNat 1) 304) 304)", "line_no": 304}, {"action": "verify", "condition": "(eq (first (getItem (attr (contractData 0 298) \"timelock\" 304) (literal (intOrNat 1) 307) 307) 308) (literal (timestamp 123) 297) 308)", "line_no": 308}]}, {"shortname": "addExecutionRequest_-_fails_with_bad_nonce", "longname": "addExecutionRequest - fails with bad nonce", "scenario": [{"action": "newContract", "id": 0, "export": "(storage (record 54 (nonce (literal (nat 0) 55)) (operator_public_keys (list 54 (reduce (attr (account_of_seed \"alice\" 315) \"public_key\" 315) 315) (reduce (attr (account_of_seed \"bob\" 316) \"public_key\" 316) 316) (reduce (attr (account_of_seed \"charlie\" 317) \"public_key\" 317) 317) (reduce (attr (account_of_seed \"dan\" 318) \"public_key\" 318) 318) (reduce (attr (account_of_seed \"eve\" 319) \"public_key\" 319) 319))) (signers_threshold (literal (intOrNat 3) 54)) (timelock (type_annotation (big_map 63 ) (bigmap \"nat\" (tuple \"timestamp\" (lambda \"unit\" (list \"operation\")))) 63)) (timelock_seconds (literal (nat 3600) 51)))\nstorage_type (())\nmessages ((addExecutionRequest True ((set_type (params 111) (tuple (map \"key_hash\" \"signature\") (tuple \"chain_id\" (tuple \"nat\" (lambda \"unit\" (list \"operation\"))))) 113) (match_tuple 114 (params 111) \"match_pair_114_fst\" \"match_pair_114_snd\") (match_tuple 117 (variant_arg \"match_pair_114_snd\" 114) \"match_pair_117_fst\" \"match_pair_117_snd\") (match_tuple 118 (variant_arg \"match_pair_117_snd\" 117) \"match_pair_118_fst\" \"match_pair_118_snd\") (verify (eq (pack (type_annotation (variant_arg \"match_pair_117_fst\" 117) (unknown 13) 121) 121) (pack (type_annotation (chain_id) (unknown 13) 121) 121) 121) (literal (string \"BAD_CHAIN_ID\") 121) 121) (verify (eq (variant_arg \"match_pair_118_fst\" 118) (add (attr (data) \"nonce\" 124) (literal (intOrNat 1) 124) 124) 124) (literal (string \"BAD_NONCE\") 124) 124) (defineLocal \"valid_signatures_counter\" (literal (nat 0) 127) 127) (forGroup \"operator_public_key\" (attr (data) \"operator_public_keys\" 128) ((ifBlock (contains (variant_arg \"match_pair_114_fst\" 114) (hash_key (iter \"operator_public_key\" 128) 130) 131) ((ifBlock (check_signature (iter \"operator_public_key\" 128) (getItem (variant_arg \"match_pair_114_fst\" 114) (hash_key (iter \"operator_public_key\" 128) 130) 132) (pack (variant_arg \"match_pair_114_snd\" 114) 132) 132) ((set (getLocal \"valid_signatures_counter\" 327) (add (getLocal \"valid_signatures_counter\" 133) (literal (intOrNat 1) 133) 133) 133)) 132)) 131)) 128) (verify (ge (getLocal \"valid_signatures_counter\" 136) (attr (data) \"signers_threshold\" 136) 136) (literal (string \"TOO_FEW_SIGS\") 136) 136) (set (attr (data) \"nonce\" 124) (add (attr (data) \"nonce\" 124) (literal (intOrNat 1) 139) 139) 139) (set (getItem (attr (data) \"timelock\" 142) (attr (data) \"nonce\" 124) 142) (tuple 142 (now) (variant_arg \"match_pair_118_snd\" 118)) 142))) (execute True ((match_tuple 151 (getItem (attr (data) \"timelock\" 142) (params 148) 150) \"match_pair_151_fst\" \"match_pair_151_snd\") (verify (lt (add_seconds (variant_arg \"match_pair_151_fst\" 151) (toInt (attr (data) \"timelock_seconds\" 154) 154) 154) (now) 155) (literal (string \"TOO_EARLY\") 155) 155) (delItem (attr (data) \"timelock\" 142) (params 148) 158) (set_type (call_lambda (variant_arg \"match_pair_151_snd\" 151) (unit) 161) (list \"operation\") 162) (forGroup \"op\" (call_lambda (variant_arg \"match_pair_151_snd\" 151) (unit) 161) ((set (operations 163) (cons (iter \"op\" 163) (operations 163) 163) 163)) 163))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 327, "show": true, "accept_unknown_types": false}, {"action": "newContract", "id": 1, "export": "(storage (record 171 (admin (literal (local-address 0) 54)) (storedValue (literal (intOrNat 0) 171)))\nstorage_type (())\nmessages ((default True ()) (replace True ((verify (eq (sender) (attr (data) \"admin\" 179) 179) (literal (string \"NOT_ADMIN\") 179) 179) (set (attr (data) \"storedValue\" 180) (params 178) 180))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 334, "show": true, "accept_unknown_types": false}, {"action": "message", "id": 0, "message": "addExecutionRequest", "params": "(tuple 362 (map 362 ((reduce (attr (account_of_seed \"bob\" 316) \"public_key_hash\" 316) 316) (reduce (make_signature (reduce (attr (account_of_seed \"bob\" 316) \"secret_key\" 316) 316) (pack (tuple 346 (literal (chain_id_cst \"0x9caecab9\") 330) (tuple 346 (literal (intOrNat 4) 346) (lambda 0 \"\" 346 ((set_type (lambdaParams 0 \"\" 346 (unknown 17)) \"unit\" 339) (result (list 341 (transfer (literal (intOrNat 1) 341) (literal (mutez 0) 341) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 340) \"Some\" \"None\" 340) 341)) 341))))) 346) \"Raw\" 348) 348)) ((reduce (attr (account_of_seed \"charlie\" 317) \"public_key_hash\" 317) 317) (reduce (make_signature (reduce (attr (account_of_seed \"charlie\" 317) \"secret_key\" 317) 317) (pack (tuple 346 (literal (chain_id_cst \"0x9caecab9\") 330) (tuple 346 (literal (intOrNat 4) 346) (lambda 0 \"\" 346 ((set_type (lambdaParams 0 \"\" 346 (unknown 17)) \"unit\" 339) (result (list 341 (transfer (literal (intOrNat 1) 341) (literal (mutez 0) 341) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 340) \"Some\" \"None\" 340) 341)) 341))))) 346) \"Raw\" 349) 349)) ((reduce (attr (account_of_seed \"dan\" 318) \"public_key_hash\" 318) 318) (reduce (make_signature (reduce (attr (account_of_seed \"dan\" 318) \"secret_key\" 318) 318) (pack (tuple 346 (literal (chain_id_cst \"0x9caecab9\") 330) (tuple 346 (literal (intOrNat 4) 346) (lambda 0 \"\" 346 ((set_type (lambdaParams 0 \"\" 346 (unknown 17)) \"unit\" 339) (result (list 341 (transfer (literal (intOrNat 1) 341) (literal (mutez 0) 341) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 340) \"Some\" \"None\" 340) 341)) 341))))) 346) \"Raw\" 350) 350))) (tuple 362 (literal (chain_id_cst \"0x9caecab9\") 330) (tuple 362 (literal (intOrNat 4) 362) (lambda 1 \"\" 362 ((set_type (lambdaParams 1 \"\" 362 (unknown 18)) \"unit\" 339) (result (list 341 (transfer (literal (intOrNat 1) 341) (literal (mutez 0) 341) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 340) \"Some\" \"None\" 340) 341)) 341))))))", "line_no": 362, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "(literal (chain_id_cst \"0x9caecab9\") 330)", "time": "(literal (timestamp 123) 359)", "amount": "(literal (mutez 0) 1)", "level": "(literal (intOrNat 0) 362)", "show": true, "valid": "(literal (bool False) 362)", "voting_powers": "(map 362 )"}]}, {"shortname": "addExecutionRequest_-_fails_with_bad_chain_id", "longname": "addExecutionRequest - fails with bad chain id", "scenario": [{"action": "newContract", "id": 0, "export": "(storage (record 54 (nonce (literal (nat 0) 55)) (operator_public_keys (list 54 (reduce (attr (account_of_seed \"alice\" 373) \"public_key\" 373) 373) (reduce (attr (account_of_seed \"bob\" 374) \"public_key\" 374) 374) (reduce (attr (account_of_seed \"charlie\" 375) \"public_key\" 375) 375) (reduce (attr (account_of_seed \"dan\" 376) \"public_key\" 376) 376) (reduce (attr (account_of_seed \"eve\" 377) \"public_key\" 377) 377))) (signers_threshold (literal (intOrNat 3) 54)) (timelock (type_annotation (big_map 63 ) (bigmap \"nat\" (tuple \"timestamp\" (lambda \"unit\" (list \"operation\")))) 63)) (timelock_seconds (literal (nat 3600) 51)))\nstorage_type (())\nmessages ((addExecutionRequest True ((set_type (params 111) (tuple (map \"key_hash\" \"signature\") (tuple \"chain_id\" (tuple \"nat\" (lambda \"unit\" (list \"operation\"))))) 113) (match_tuple 114 (params 111) \"match_pair_114_fst\" \"match_pair_114_snd\") (match_tuple 117 (variant_arg \"match_pair_114_snd\" 114) \"match_pair_117_fst\" \"match_pair_117_snd\") (match_tuple 118 (variant_arg \"match_pair_117_snd\" 117) \"match_pair_118_fst\" \"match_pair_118_snd\") (verify (eq (pack (type_annotation (variant_arg \"match_pair_117_fst\" 117) (unknown 19) 121) 121) (pack (type_annotation (chain_id) (unknown 19) 121) 121) 121) (literal (string \"BAD_CHAIN_ID\") 121) 121) (verify (eq (variant_arg \"match_pair_118_fst\" 118) (add (attr (data) \"nonce\" 124) (literal (intOrNat 1) 124) 124) 124) (literal (string \"BAD_NONCE\") 124) 124) (defineLocal \"valid_signatures_counter\" (literal (nat 0) 127) 127) (forGroup \"operator_public_key\" (attr (data) \"operator_public_keys\" 128) ((ifBlock (contains (variant_arg \"match_pair_114_fst\" 114) (hash_key (iter \"operator_public_key\" 128) 130) 131) ((ifBlock (check_signature (iter \"operator_public_key\" 128) (getItem (variant_arg \"match_pair_114_fst\" 114) (hash_key (iter \"operator_public_key\" 128) 130) 132) (pack (variant_arg \"match_pair_114_snd\" 114) 132) 132) ((set (getLocal \"valid_signatures_counter\" 385) (add (getLocal \"valid_signatures_counter\" 133) (literal (intOrNat 1) 133) 133) 133)) 132)) 131)) 128) (verify (ge (getLocal \"valid_signatures_counter\" 136) (attr (data) \"signers_threshold\" 136) 136) (literal (string \"TOO_FEW_SIGS\") 136) 136) (set (attr (data) \"nonce\" 124) (add (attr (data) \"nonce\" 124) (literal (intOrNat 1) 139) 139) 139) (set (getItem (attr (data) \"timelock\" 142) (attr (data) \"nonce\" 124) 142) (tuple 142 (now) (variant_arg \"match_pair_118_snd\" 118)) 142))) (execute True ((match_tuple 151 (getItem (attr (data) \"timelock\" 142) (params 148) 150) \"match_pair_151_fst\" \"match_pair_151_snd\") (verify (lt (add_seconds (variant_arg \"match_pair_151_fst\" 151) (toInt (attr (data) \"timelock_seconds\" 154) 154) 154) (now) 155) (literal (string \"TOO_EARLY\") 155) 155) (delItem (attr (data) \"timelock\" 142) (params 148) 158) (set_type (call_lambda (variant_arg \"match_pair_151_snd\" 151) (unit) 161) (list \"operation\") 162) (forGroup \"op\" (call_lambda (variant_arg \"match_pair_151_snd\" 151) (unit) 161) ((set (operations 163) (cons (iter \"op\" 163) (operations 163) 163) 163)) 163))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 385, "show": true, "accept_unknown_types": false}, {"action": "newContract", "id": 1, "export": "(storage (record 171 (admin (literal (local-address 0) 54)) (storedValue (literal (intOrNat 0) 171)))\nstorage_type (())\nmessages ((default True ()) (replace True ((verify (eq (sender) (attr (data) \"admin\" 179) 179) (literal (string \"NOT_ADMIN\") 179) 179) (set (attr (data) \"storedValue\" 180) (params 178) 180))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 392, "show": true, "accept_unknown_types": false}, {"action": "message", "id": 0, "message": "addExecutionRequest", "params": "(tuple 419 (map 419 ((reduce (attr (account_of_seed \"bob\" 374) \"public_key_hash\" 374) 374) (reduce (make_signature (reduce (attr (account_of_seed \"bob\" 374) \"secret_key\" 374) 374) (pack (tuple 404 (literal (chain_id_cst \"0x9caecab9\") 388) (tuple 404 (literal (intOrNat 1) 404) (lambda 0 \"\" 404 ((set_type (lambdaParams 0 \"\" 404 (unknown 23)) \"unit\" 397) (result (list 399 (transfer (literal (intOrNat 1) 399) (literal (mutez 0) 399) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 398) \"Some\" \"None\" 398) 399)) 399))))) 404) \"Raw\" 406) 406)) ((reduce (attr (account_of_seed \"charlie\" 375) \"public_key_hash\" 375) 375) (reduce (make_signature (reduce (attr (account_of_seed \"charlie\" 375) \"secret_key\" 375) 375) (pack (tuple 404 (literal (chain_id_cst \"0x9caecab9\") 388) (tuple 404 (literal (intOrNat 1) 404) (lambda 0 \"\" 404 ((set_type (lambdaParams 0 \"\" 404 (unknown 23)) \"unit\" 397) (result (list 399 (transfer (literal (intOrNat 1) 399) (literal (mutez 0) 399) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 398) \"Some\" \"None\" 398) 399)) 399))))) 404) \"Raw\" 407) 407)) ((reduce (attr (account_of_seed \"dan\" 376) \"public_key_hash\" 376) 376) (reduce (make_signature (reduce (attr (account_of_seed \"dan\" 376) \"secret_key\" 376) 376) (pack (tuple 404 (literal (chain_id_cst \"0x9caecab9\") 388) (tuple 404 (literal (intOrNat 1) 404) (lambda 0 \"\" 404 ((set_type (lambdaParams 0 \"\" 404 (unknown 23)) \"unit\" 397) (result (list 399 (transfer (literal (intOrNat 1) 399) (literal (mutez 0) 399) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 398) \"Some\" \"None\" 398) 399)) 399))))) 404) \"Raw\" 408) 408))) (tuple 419 (literal (chain_id_cst \"0x9caecab9\") 388) (tuple 419 (literal (intOrNat 1) 419) (lambda 1 \"\" 419 ((set_type (lambdaParams 1 \"\" 419 (unknown 24)) \"unit\" 397) (result (list 399 (transfer (literal (intOrNat 1) 399) (literal (mutez 0) 399) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 398) \"Some\" \"None\" 398) 399)) 399))))))", "line_no": 419, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "(literal (chain_id_cst \"0x0011223344\") 420)", "time": "(literal (timestamp 123) 418)", "amount": "(literal (mutez 0) 1)", "level": "(literal (intOrNat 0) 419)", "show": true, "valid": "(literal (bool False) 419)", "voting_powers": "(map 419 )"}]}, {"shortname": "addExecutionRequest_-_fails_with_less_than_threshold_signatures", "longname": "addExecutionRequest - fails with less than threshold signatures", "scenario": [{"action": "newContract", "id": 0, "export": "(storage (record 54 (nonce (literal (nat 0) 55)) (operator_public_keys (list 54 (reduce (attr (account_of_seed \"alice\" 431) \"public_key\" 431) 431) (reduce (attr (account_of_seed \"bob\" 432) \"public_key\" 432) 432) (reduce (attr (account_of_seed \"charlie\" 433) \"public_key\" 433) 433) (reduce (attr (account_of_seed \"dan\" 434) \"public_key\" 434) 434) (reduce (attr (account_of_seed \"eve\" 435) \"public_key\" 435) 435))) (signers_threshold (literal (intOrNat 3) 54)) (timelock (type_annotation (big_map 63 ) (bigmap \"nat\" (tuple \"timestamp\" (lambda \"unit\" (list \"operation\")))) 63)) (timelock_seconds (literal (nat 3600) 51)))\nstorage_type (())\nmessages ((addExecutionRequest True ((set_type (params 111) (tuple (map \"key_hash\" \"signature\") (tuple \"chain_id\" (tuple \"nat\" (lambda \"unit\" (list \"operation\"))))) 113) (match_tuple 114 (params 111) \"match_pair_114_fst\" \"match_pair_114_snd\") (match_tuple 117 (variant_arg \"match_pair_114_snd\" 114) \"match_pair_117_fst\" \"match_pair_117_snd\") (match_tuple 118 (variant_arg \"match_pair_117_snd\" 117) \"match_pair_118_fst\" \"match_pair_118_snd\") (verify (eq (pack (type_annotation (variant_arg \"match_pair_117_fst\" 117) (unknown 25) 121) 121) (pack (type_annotation (chain_id) (unknown 25) 121) 121) 121) (literal (string \"BAD_CHAIN_ID\") 121) 121) (verify (eq (variant_arg \"match_pair_118_fst\" 118) (add (attr (data) \"nonce\" 124) (literal (intOrNat 1) 124) 124) 124) (literal (string \"BAD_NONCE\") 124) 124) (defineLocal \"valid_signatures_counter\" (literal (nat 0) 127) 127) (forGroup \"operator_public_key\" (attr (data) \"operator_public_keys\" 128) ((ifBlock (contains (variant_arg \"match_pair_114_fst\" 114) (hash_key (iter \"operator_public_key\" 128) 130) 131) ((ifBlock (check_signature (iter \"operator_public_key\" 128) (getItem (variant_arg \"match_pair_114_fst\" 114) (hash_key (iter \"operator_public_key\" 128) 130) 132) (pack (variant_arg \"match_pair_114_snd\" 114) 132) 132) ((set (getLocal \"valid_signatures_counter\" 443) (add (getLocal \"valid_signatures_counter\" 133) (literal (intOrNat 1) 133) 133) 133)) 132)) 131)) 128) (verify (ge (getLocal \"valid_signatures_counter\" 136) (attr (data) \"signers_threshold\" 136) 136) (literal (string \"TOO_FEW_SIGS\") 136) 136) (set (attr (data) \"nonce\" 124) (add (attr (data) \"nonce\" 124) (literal (intOrNat 1) 139) 139) 139) (set (getItem (attr (data) \"timelock\" 142) (attr (data) \"nonce\" 124) 142) (tuple 142 (now) (variant_arg \"match_pair_118_snd\" 118)) 142))) (execute True ((match_tuple 151 (getItem (attr (data) \"timelock\" 142) (params 148) 150) \"match_pair_151_fst\" \"match_pair_151_snd\") (verify (lt (add_seconds (variant_arg \"match_pair_151_fst\" 151) (toInt (attr (data) \"timelock_seconds\" 154) 154) 154) (now) 155) (literal (string \"TOO_EARLY\") 155) 155) (delItem (attr (data) \"timelock\" 142) (params 148) 158) (set_type (call_lambda (variant_arg \"match_pair_151_snd\" 151) (unit) 161) (list \"operation\") 162) (forGroup \"op\" (call_lambda (variant_arg \"match_pair_151_snd\" 151) (unit) 161) ((set (operations 163) (cons (iter \"op\" 163) (operations 163) 163) 163)) 163))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 443, "show": true, "accept_unknown_types": false}, {"action": "newContract", "id": 1, "export": "(storage (record 171 (admin (literal (local-address 0) 54)) (storedValue (literal (intOrNat 0) 171)))\nstorage_type (())\nmessages ((default True ()) (replace True ((verify (eq (sender) (attr (data) \"admin\" 179) 179) (literal (string \"NOT_ADMIN\") 179) 179) (set (attr (data) \"storedValue\" 180) (params 178) 180))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 450, "show": true, "accept_unknown_types": false}, {"action": "message", "id": 0, "message": "addExecutionRequest", "params": "(tuple 476 (map 476 ((reduce (attr (account_of_seed \"bob\" 432) \"public_key_hash\" 432) 432) (reduce (make_signature (reduce (attr (account_of_seed \"bob\" 432) \"secret_key\" 432) 432) (pack (tuple 462 (literal (chain_id_cst \"0x9caecab9\") 446) (tuple 462 (literal (intOrNat 1) 462) (lambda 0 \"\" 462 ((set_type (lambdaParams 0 \"\" 462 (unknown 29)) \"unit\" 455) (result (list 457 (transfer (literal (intOrNat 1) 457) (literal (mutez 0) 457) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 456) \"Some\" \"None\" 456) 457)) 457))))) 462) \"Raw\" 464) 464)) ((reduce (attr (account_of_seed \"charlie\" 433) \"public_key_hash\" 433) 433) (reduce (make_signature (reduce (attr (account_of_seed \"charlie\" 433) \"secret_key\" 433) 433) (pack (tuple 462 (literal (chain_id_cst \"0x9caecab9\") 446) (tuple 462 (literal (intOrNat 1) 462) (lambda 0 \"\" 462 ((set_type (lambdaParams 0 \"\" 462 (unknown 29)) \"unit\" 455) (result (list 457 (transfer (literal (intOrNat 1) 457) (literal (mutez 0) 457) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 456) \"Some\" \"None\" 456) 457)) 457))))) 462) \"Raw\" 465) 465))) (tuple 476 (literal (chain_id_cst \"0x9caecab9\") 446) (tuple 476 (literal (intOrNat 1) 476) (lambda 1 \"\" 476 ((set_type (lambdaParams 1 \"\" 476 (unknown 30)) \"unit\" 455) (result (list 457 (transfer (literal (intOrNat 1) 457) (literal (mutez 0) 457) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 456) \"Some\" \"None\" 456) 457)) 457))))))", "line_no": 476, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "(literal (chain_id_cst \"0x9caecab9\") 446)", "time": "(literal (timestamp 123) 473)", "amount": "(literal (mutez 0) 1)", "level": "(literal (intOrNat 0) 476)", "show": true, "valid": "(literal (bool False) 476)", "voting_powers": "(map 476 )"}]}, {"shortname": "execute_-_succeeds_after_timelock", "longname": "execute - succeeds after timelock", "scenario": [{"action": "newContract", "id": 0, "export": "(storage (record 54 (nonce (literal (nat 0) 55)) (operator_public_keys (list 54 (reduce (attr (account_of_seed \"alice\" 545) \"public_key\" 545) 545) (reduce (attr (account_of_seed \"bob\" 546) \"public_key\" 546) 546) (reduce (attr (account_of_seed \"charlie\" 547) \"public_key\" 547) 547) (reduce (attr (account_of_seed \"dan\" 548) \"public_key\" 548) 548) (reduce (attr (account_of_seed \"eve\" 549) \"public_key\" 549) 549))) (signers_threshold (literal (intOrNat 3) 54)) (timelock (type_annotation (big_map 63 ) (bigmap \"nat\" (tuple \"timestamp\" (lambda \"unit\" (list \"operation\")))) 63)) (timelock_seconds (literal (nat 1) 553)))\nstorage_type (())\nmessages ((addExecutionRequest True ((set_type (params 111) (tuple (map \"key_hash\" \"signature\") (tuple \"chain_id\" (tuple \"nat\" (lambda \"unit\" (list \"operation\"))))) 113) (match_tuple 114 (params 111) \"match_pair_114_fst\" \"match_pair_114_snd\") (match_tuple 117 (variant_arg \"match_pair_114_snd\" 114) \"match_pair_117_fst\" \"match_pair_117_snd\") (match_tuple 118 (variant_arg \"match_pair_117_snd\" 117) \"match_pair_118_fst\" \"match_pair_118_snd\") (verify (eq (pack (type_annotation (variant_arg \"match_pair_117_fst\" 117) (unknown 31) 121) 121) (pack (type_annotation (chain_id) (unknown 31) 121) 121) 121) (literal (string \"BAD_CHAIN_ID\") 121) 121) (verify (eq (variant_arg \"match_pair_118_fst\" 118) (add (attr (data) \"nonce\" 124) (literal (intOrNat 1) 124) 124) 124) (literal (string \"BAD_NONCE\") 124) 124) (defineLocal \"valid_signatures_counter\" (literal (nat 0) 127) 127) (forGroup \"operator_public_key\" (attr (data) \"operator_public_keys\" 128) ((ifBlock (contains (variant_arg \"match_pair_114_fst\" 114) (hash_key (iter \"operator_public_key\" 128) 130) 131) ((ifBlock (check_signature (iter \"operator_public_key\" 128) (getItem (variant_arg \"match_pair_114_fst\" 114) (hash_key (iter \"operator_public_key\" 128) 130) 132) (pack (variant_arg \"match_pair_114_snd\" 114) 132) 132) ((set (getLocal \"valid_signatures_counter\" 559) (add (getLocal \"valid_signatures_counter\" 133) (literal (intOrNat 1) 133) 133) 133)) 132)) 131)) 128) (verify (ge (getLocal \"valid_signatures_counter\" 136) (attr (data) \"signers_threshold\" 136) 136) (literal (string \"TOO_FEW_SIGS\") 136) 136) (set (attr (data) \"nonce\" 124) (add (attr (data) \"nonce\" 124) (literal (intOrNat 1) 139) 139) 139) (set (getItem (attr (data) \"timelock\" 142) (attr (data) \"nonce\" 124) 142) (tuple 142 (now) (variant_arg \"match_pair_118_snd\" 118)) 142))) (execute True ((match_tuple 151 (getItem (attr (data) \"timelock\" 142) (params 148) 150) \"match_pair_151_fst\" \"match_pair_151_snd\") (verify (lt (add_seconds (variant_arg \"match_pair_151_fst\" 151) (toInt (attr (data) \"timelock_seconds\" 154) 154) 154) (now) 155) (literal (string \"TOO_EARLY\") 155) 155) (delItem (attr (data) \"timelock\" 142) (params 148) 158) (set_type (call_lambda (variant_arg \"match_pair_151_snd\" 151) (unit) 161) (list \"operation\") 162) (forGroup \"op\" (call_lambda (variant_arg \"match_pair_151_snd\" 151) (unit) 161) ((set (operations 163) (cons (iter \"op\" 163) (operations 163) 163) 163)) 163))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 559, "show": true, "accept_unknown_types": false}, {"action": "newContract", "id": 1, "export": "(storage (record 171 (admin (literal (local-address 0) 54)) (storedValue (literal (intOrNat 0) 171)))\nstorage_type (())\nmessages ((default True ()) (replace True ((verify (eq (sender) (attr (data) \"admin\" 179) 179) (literal (string \"NOT_ADMIN\") 179) 179) (set (attr (data) \"storedValue\" 180) (params 178) 180))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 566, "show": true, "accept_unknown_types": false}, {"action": "message", "id": 0, "message": "addExecutionRequest", "params": "(tuple 593 (map 593 ((reduce (attr (account_of_seed \"bob\" 546) \"public_key_hash\" 546) 546) (reduce (make_signature (reduce (attr (account_of_seed \"bob\" 546) \"secret_key\" 546) 546) (pack (tuple 579 (literal (chain_id_cst \"0x9caecab9\") 562) (tuple 579 (literal (intOrNat 1) 579) (lambda 0 \"\" 579 ((set_type (lambdaParams 0 \"\" 579 (unknown 35)) \"unit\" 572) (result (list 574 (transfer (literal (nat 1) 570) (literal (mutez 0) 574) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 573) \"Some\" \"None\" 573) 574)) 574))))) 579) \"Raw\" 581) 581)) ((reduce (attr (account_of_seed \"charlie\" 547) \"public_key_hash\" 547) 547) (reduce (make_signature (reduce (attr (account_of_seed \"charlie\" 547) \"secret_key\" 547) 547) (pack (tuple 579 (literal (chain_id_cst \"0x9caecab9\") 562) (tuple 579 (literal (intOrNat 1) 579) (lambda 0 \"\" 579 ((set_type (lambdaParams 0 \"\" 579 (unknown 35)) \"unit\" 572) (result (list 574 (transfer (literal (nat 1) 570) (literal (mutez 0) 574) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 573) \"Some\" \"None\" 573) 574)) 574))))) 579) \"Raw\" 582) 582)) ((reduce (attr (account_of_seed \"dan\" 548) \"public_key_hash\" 548) 548) (reduce (make_signature (reduce (attr (account_of_seed \"dan\" 548) \"secret_key\" 548) 548) (pack (tuple 579 (literal (chain_id_cst \"0x9caecab9\") 562) (tuple 579 (literal (intOrNat 1) 579) (lambda 0 \"\" 579 ((set_type (lambdaParams 0 \"\" 579 (unknown 35)) \"unit\" 572) (result (list 574 (transfer (literal (nat 1) 570) (literal (mutez 0) 574) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 573) \"Some\" \"None\" 573) 574)) 574))))) 579) \"Raw\" 583) 583))) (tuple 593 (literal (chain_id_cst \"0x9caecab9\") 562) (tuple 593 (literal (intOrNat 1) 593) (lambda 1 \"\" 593 ((set_type (lambdaParams 1 \"\" 593 (unknown 36)) \"unit\" 572) (result (list 574 (transfer (literal (nat 1) 570) (literal (mutez 0) 574) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 573) \"Some\" \"None\" 573) 574)) 574))))))", "line_no": 593, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "(literal (chain_id_cst \"0x9caecab9\") 562)", "time": "(literal (timestamp 123) 592)", "amount": "(literal (mutez 0) 1)", "level": "(literal (intOrNat 0) 593)", "show": true, "valid": "(literal (bool True) 593)", "voting_powers": "(map 593 )"}, {"action": "message", "id": 0, "message": "execute", "params": "(literal (intOrNat 1) 600)", "line_no": 600, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "", "time": "(add_seconds (literal (timestamp 123) 592) (mul (literal (nat 1) 553) (literal (intOrNat 2) 599) 599) 599)", "amount": "(literal (mutez 0) 1)", "level": "(literal (intOrNat 0) 600)", "show": true, "valid": "(literal (bool True) 600)", "voting_powers": "(map 600 )"}, {"action": "verify", "condition": "(eq (contains (attr (contractData 0 600) \"timelock\" 605) (literal (intOrNat 1) 605) 605) (literal (bool False) 605) 605)", "line_no": 605}, {"action": "verify", "condition": "(eq (attr (contractData 1 566) \"storedValue\" 608) (literal (nat 1) 570) 608)", "line_no": 608}]}, {"shortname": "execute_-_fails_before_timelock", "longname": "execute - fails before timelock", "scenario": [{"action": "newContract", "id": 0, "export": "(storage (record 54 (nonce (literal (nat 0) 55)) (operator_public_keys (list 54 (reduce (attr (account_of_seed \"alice\" 616) \"public_key\" 616) 616) (reduce (attr (account_of_seed \"bob\" 617) \"public_key\" 617) 617) (reduce (attr (account_of_seed \"charlie\" 618) \"public_key\" 618) 618) (reduce (attr (account_of_seed \"dan\" 619) \"public_key\" 619) 619) (reduce (attr (account_of_seed \"eve\" 620) \"public_key\" 620) 620))) (signers_threshold (literal (intOrNat 3) 54)) (timelock (type_annotation (big_map 63 ) (bigmap \"nat\" (tuple \"timestamp\" (lambda \"unit\" (list \"operation\")))) 63)) (timelock_seconds (literal (nat 1) 624)))\nstorage_type (())\nmessages ((addExecutionRequest True ((set_type (params 111) (tuple (map \"key_hash\" \"signature\") (tuple \"chain_id\" (tuple \"nat\" (lambda \"unit\" (list \"operation\"))))) 113) (match_tuple 114 (params 111) \"match_pair_114_fst\" \"match_pair_114_snd\") (match_tuple 117 (variant_arg \"match_pair_114_snd\" 114) \"match_pair_117_fst\" \"match_pair_117_snd\") (match_tuple 118 (variant_arg \"match_pair_117_snd\" 117) \"match_pair_118_fst\" \"match_pair_118_snd\") (verify (eq (pack (type_annotation (variant_arg \"match_pair_117_fst\" 117) (unknown 37) 121) 121) (pack (type_annotation (chain_id) (unknown 37) 121) 121) 121) (literal (string \"BAD_CHAIN_ID\") 121) 121) (verify (eq (variant_arg \"match_pair_118_fst\" 118) (add (attr (data) \"nonce\" 124) (literal (intOrNat 1) 124) 124) 124) (literal (string \"BAD_NONCE\") 124) 124) (defineLocal \"valid_signatures_counter\" (literal (nat 0) 127) 127) (forGroup \"operator_public_key\" (attr (data) \"operator_public_keys\" 128) ((ifBlock (contains (variant_arg \"match_pair_114_fst\" 114) (hash_key (iter \"operator_public_key\" 128) 130) 131) ((ifBlock (check_signature (iter \"operator_public_key\" 128) (getItem (variant_arg \"match_pair_114_fst\" 114) (hash_key (iter \"operator_public_key\" 128) 130) 132) (pack (variant_arg \"match_pair_114_snd\" 114) 132) 132) ((set (getLocal \"valid_signatures_counter\" 630) (add (getLocal \"valid_signatures_counter\" 133) (literal (intOrNat 1) 133) 133) 133)) 132)) 131)) 128) (verify (ge (getLocal \"valid_signatures_counter\" 136) (attr (data) \"signers_threshold\" 136) 136) (literal (string \"TOO_FEW_SIGS\") 136) 136) (set (attr (data) \"nonce\" 124) (add (attr (data) \"nonce\" 124) (literal (intOrNat 1) 139) 139) 139) (set (getItem (attr (data) \"timelock\" 142) (attr (data) \"nonce\" 124) 142) (tuple 142 (now) (variant_arg \"match_pair_118_snd\" 118)) 142))) (execute True ((match_tuple 151 (getItem (attr (data) \"timelock\" 142) (params 148) 150) \"match_pair_151_fst\" \"match_pair_151_snd\") (verify (lt (add_seconds (variant_arg \"match_pair_151_fst\" 151) (toInt (attr (data) \"timelock_seconds\" 154) 154) 154) (now) 155) (literal (string \"TOO_EARLY\") 155) 155) (delItem (attr (data) \"timelock\" 142) (params 148) 158) (set_type (call_lambda (variant_arg \"match_pair_151_snd\" 151) (unit) 161) (list \"operation\") 162) (forGroup \"op\" (call_lambda (variant_arg \"match_pair_151_snd\" 151) (unit) 161) ((set (operations 163) (cons (iter \"op\" 163) (operations 163) 163) 163)) 163))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 630, "show": true, "accept_unknown_types": false}, {"action": "newContract", "id": 1, "export": "(storage (record 171 (admin (literal (local-address 0) 54)) (storedValue (literal (intOrNat 0) 171)))\nstorage_type (())\nmessages ((default True ()) (replace True ((verify (eq (sender) (attr (data) \"admin\" 179) 179) (literal (string \"NOT_ADMIN\") 179) 179) (set (attr (data) \"storedValue\" 180) (params 178) 180))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 637, "show": true, "accept_unknown_types": false}, {"action": "message", "id": 0, "message": "addExecutionRequest", "params": "(tuple 663 (map 663 ((reduce (attr (account_of_seed \"bob\" 617) \"public_key_hash\" 617) 617) (reduce (make_signature (reduce (attr (account_of_seed \"bob\" 617) \"secret_key\" 617) 617) (pack (tuple 649 (literal (chain_id_cst \"0x9caecab9\") 633) (tuple 649 (literal (intOrNat 1) 649) (lambda 0 \"\" 649 ((set_type (lambdaParams 0 \"\" 649 (unknown 41)) \"unit\" 642) (result (list 644 (transfer (literal (nat 1) 640) (literal (mutez 0) 644) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 643) \"Some\" \"None\" 643) 644)) 644))))) 649) \"Raw\" 651) 651)) ((reduce (attr (account_of_seed \"charlie\" 618) \"public_key_hash\" 618) 618) (reduce (make_signature (reduce (attr (account_of_seed \"charlie\" 618) \"secret_key\" 618) 618) (pack (tuple 649 (literal (chain_id_cst \"0x9caecab9\") 633) (tuple 649 (literal (intOrNat 1) 649) (lambda 0 \"\" 649 ((set_type (lambdaParams 0 \"\" 649 (unknown 41)) \"unit\" 642) (result (list 644 (transfer (literal (nat 1) 640) (literal (mutez 0) 644) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 643) \"Some\" \"None\" 643) 644)) 644))))) 649) \"Raw\" 652) 652)) ((reduce (attr (account_of_seed \"dan\" 619) \"public_key_hash\" 619) 619) (reduce (make_signature (reduce (attr (account_of_seed \"dan\" 619) \"secret_key\" 619) 619) (pack (tuple 649 (literal (chain_id_cst \"0x9caecab9\") 633) (tuple 649 (literal (intOrNat 1) 649) (lambda 0 \"\" 649 ((set_type (lambdaParams 0 \"\" 649 (unknown 41)) \"unit\" 642) (result (list 644 (transfer (literal (nat 1) 640) (literal (mutez 0) 644) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 643) \"Some\" \"None\" 643) 644)) 644))))) 649) \"Raw\" 653) 653))) (tuple 663 (literal (chain_id_cst \"0x9caecab9\") 633) (tuple 663 (literal (intOrNat 1) 663) (lambda 1 \"\" 663 ((set_type (lambdaParams 1 \"\" 663 (unknown 42)) \"unit\" 642) (result (list 644 (transfer (literal (nat 1) 640) (literal (mutez 0) 644) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 643) \"Some\" \"None\" 643) 644)) 644))))))", "line_no": 663, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "(literal (chain_id_cst \"0x9caecab9\") 633)", "time": "(literal (timestamp 123) 662)", "amount": "(literal (mutez 0) 1)", "level": "(literal (intOrNat 0) 663)", "show": true, "valid": "(literal (bool True) 663)", "voting_powers": "(map 663 )"}, {"action": "message", "id": 0, "message": "execute", "params": "(literal (intOrNat 1) 669)", "line_no": 669, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "", "time": "(literal (timestamp 123) 662)", "amount": "(literal (mutez 0) 1)", "level": "(literal (intOrNat 0) 669)", "show": true, "valid": "(literal (bool False) 669)", "voting_powers": "(map 669 )"}]}, {"shortname": "execute_-_executes_multiple_operations_in_the_correct_order", "longname": "execute - executes multiple operations in the correct order", "scenario": [{"action": "newContract", "id": 0, "export": "(storage (record 54 (nonce (literal (nat 0) 55)) (operator_public_keys (list 54 (reduce (attr (account_of_seed \"alice\" 679) \"public_key\" 679) 679) (reduce (attr (account_of_seed \"bob\" 680) \"public_key\" 680) 680) (reduce (attr (account_of_seed \"charlie\" 681) \"public_key\" 681) 681) (reduce (attr (account_of_seed \"dan\" 682) \"public_key\" 682) 682) (reduce (attr (account_of_seed \"eve\" 683) \"public_key\" 683) 683))) (signers_threshold (literal (intOrNat 3) 54)) (timelock (type_annotation (big_map 63 ) (bigmap \"nat\" (tuple \"timestamp\" (lambda \"unit\" (list \"operation\")))) 63)) (timelock_seconds (literal (nat 1) 687)))\nstorage_type (())\nmessages ((addExecutionRequest True ((set_type (params 111) (tuple (map \"key_hash\" \"signature\") (tuple \"chain_id\" (tuple \"nat\" (lambda \"unit\" (list \"operation\"))))) 113) (match_tuple 114 (params 111) \"match_pair_114_fst\" \"match_pair_114_snd\") (match_tuple 117 (variant_arg \"match_pair_114_snd\" 114) \"match_pair_117_fst\" \"match_pair_117_snd\") (match_tuple 118 (variant_arg \"match_pair_117_snd\" 117) \"match_pair_118_fst\" \"match_pair_118_snd\") (verify (eq (pack (type_annotation (variant_arg \"match_pair_117_fst\" 117) (unknown 43) 121) 121) (pack (type_annotation (chain_id) (unknown 43) 121) 121) 121) (literal (string \"BAD_CHAIN_ID\") 121) 121) (verify (eq (variant_arg \"match_pair_118_fst\" 118) (add (attr (data) \"nonce\" 124) (literal (intOrNat 1) 124) 124) 124) (literal (string \"BAD_NONCE\") 124) 124) (defineLocal \"valid_signatures_counter\" (literal (nat 0) 127) 127) (forGroup \"operator_public_key\" (attr (data) \"operator_public_keys\" 128) ((ifBlock (contains (variant_arg \"match_pair_114_fst\" 114) (hash_key (iter \"operator_public_key\" 128) 130) 131) ((ifBlock (check_signature (iter \"operator_public_key\" 128) (getItem (variant_arg \"match_pair_114_fst\" 114) (hash_key (iter \"operator_public_key\" 128) 130) 132) (pack (variant_arg \"match_pair_114_snd\" 114) 132) 132) ((set (getLocal \"valid_signatures_counter\" 693) (add (getLocal \"valid_signatures_counter\" 133) (literal (intOrNat 1) 133) 133) 133)) 132)) 131)) 128) (verify (ge (getLocal \"valid_signatures_counter\" 136) (attr (data) \"signers_threshold\" 136) 136) (literal (string \"TOO_FEW_SIGS\") 136) 136) (set (attr (data) \"nonce\" 124) (add (attr (data) \"nonce\" 124) (literal (intOrNat 1) 139) 139) 139) (set (getItem (attr (data) \"timelock\" 142) (attr (data) \"nonce\" 124) 142) (tuple 142 (now) (variant_arg \"match_pair_118_snd\" 118)) 142))) (execute True ((match_tuple 151 (getItem (attr (data) \"timelock\" 142) (params 148) 150) \"match_pair_151_fst\" \"match_pair_151_snd\") (verify (lt (add_seconds (variant_arg \"match_pair_151_fst\" 151) (toInt (attr (data) \"timelock_seconds\" 154) 154) 154) (now) 155) (literal (string \"TOO_EARLY\") 155) 155) (delItem (attr (data) \"timelock\" 142) (params 148) 158) (set_type (call_lambda (variant_arg \"match_pair_151_snd\" 151) (unit) 161) (list \"operation\") 162) (forGroup \"op\" (call_lambda (variant_arg \"match_pair_151_snd\" 151) (unit) 161) ((set (operations 163) (cons (iter \"op\" 163) (operations 163) 163) 163)) 163))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 693, "show": true, "accept_unknown_types": false}, {"action": "newContract", "id": 1, "export": "(storage (record 171 (admin (literal (local-address 0) 54)) (storedValue (literal (intOrNat 0) 171)))\nstorage_type (())\nmessages ((default True ()) (replace True ((verify (eq (sender) (attr (data) \"admin\" 179) 179) (literal (string \"NOT_ADMIN\") 179) 179) (set (attr (data) \"storedValue\" 180) (params 178) 180))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 700, "show": true, "accept_unknown_types": false}, {"action": "message", "id": 0, "message": "addExecutionRequest", "params": "(tuple 729 (map 729 ((reduce (attr (account_of_seed \"bob\" 680) \"public_key_hash\" 680) 680) (reduce (make_signature (reduce (attr (account_of_seed \"bob\" 680) \"secret_key\" 680) 680) (pack (tuple 715 (literal (chain_id_cst \"0x9caecab9\") 696) (tuple 715 (literal (intOrNat 1) 715) (lambda 0 \"\" 715 ((set_type (lambdaParams 0 \"\" 715 (unknown 47)) \"unit\" 705) (result (list 707 (transfer (literal (nat 1) 708) (literal (mutez 0) 708) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 706) \"Some\" \"None\" 706) 708) (transfer (literal (nat 2) 703) (literal (mutez 0) 709) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 706) \"Some\" \"None\" 706) 709)) 707))))) 715) \"Raw\" 717) 717)) ((reduce (attr (account_of_seed \"charlie\" 681) \"public_key_hash\" 681) 681) (reduce (make_signature (reduce (attr (account_of_seed \"charlie\" 681) \"secret_key\" 681) 681) (pack (tuple 715 (literal (chain_id_cst \"0x9caecab9\") 696) (tuple 715 (literal (intOrNat 1) 715) (lambda 0 \"\" 715 ((set_type (lambdaParams 0 \"\" 715 (unknown 47)) \"unit\" 705) (result (list 707 (transfer (literal (nat 1) 708) (literal (mutez 0) 708) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 706) \"Some\" \"None\" 706) 708) (transfer (literal (nat 2) 703) (literal (mutez 0) 709) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 706) \"Some\" \"None\" 706) 709)) 707))))) 715) \"Raw\" 718) 718)) ((reduce (attr (account_of_seed \"dan\" 682) \"public_key_hash\" 682) 682) (reduce (make_signature (reduce (attr (account_of_seed \"dan\" 682) \"secret_key\" 682) 682) (pack (tuple 715 (literal (chain_id_cst \"0x9caecab9\") 696) (tuple 715 (literal (intOrNat 1) 715) (lambda 0 \"\" 715 ((set_type (lambdaParams 0 \"\" 715 (unknown 47)) \"unit\" 705) (result (list 707 (transfer (literal (nat 1) 708) (literal (mutez 0) 708) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 706) \"Some\" \"None\" 706) 708) (transfer (literal (nat 2) 703) (literal (mutez 0) 709) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 706) \"Some\" \"None\" 706) 709)) 707))))) 715) \"Raw\" 719) 719))) (tuple 729 (literal (chain_id_cst \"0x9caecab9\") 696) (tuple 729 (literal (intOrNat 1) 729) (lambda 1 \"\" 729 ((set_type (lambdaParams 1 \"\" 729 (unknown 48)) \"unit\" 705) (result (list 707 (transfer (literal (nat 1) 708) (literal (mutez 0) 708) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 706) \"Some\" \"None\" 706) 708) (transfer (literal (nat 2) 703) (literal (mutez 0) 709) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 706) \"Some\" \"None\" 706) 709)) 707))))))", "line_no": 729, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "(literal (chain_id_cst \"0x9caecab9\") 696)", "time": "(literal (timestamp 123) 728)", "amount": "(literal (mutez 0) 1)", "level": "(literal (intOrNat 0) 729)", "show": true, "valid": "(literal (bool True) 729)", "voting_powers": "(map 729 )"}, {"action": "message", "id": 0, "message": "execute", "params": "(literal (intOrNat 1) 736)", "line_no": 736, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "", "time": "(add_seconds (literal (timestamp 123) 728) (mul (literal (nat 1) 687) (literal (intOrNat 2) 735) 735) 735)", "amount": "(literal (mutez 0) 1)", "level": "(literal (intOrNat 0) 736)", "show": true, "valid": "(literal (bool True) 736)", "voting_powers": "(map 736 )"}, {"action": "verify", "condition": "(eq (contains (attr (contractData 0 736) \"timelock\" 741) (literal (intOrNat 1) 741) 741) (literal (bool False) 741) 741)", "line_no": 741}, {"action": "verify", "condition": "(eq (attr (contractData 1 700) \"storedValue\" 744) (literal (nat 2) 703) 744)", "line_no": 744}]}, {"shortname": "execute_-_able_to_timelock_and_execute_multiple_operations", "longname": "execute - able to timelock and execute multiple operations", "scenario": [{"action": "newContract", "id": 0, "export": "(storage (record 54 (nonce (literal (nat 0) 55)) (operator_public_keys (list 54 (reduce (attr (account_of_seed \"alice\" 751) \"public_key\" 751) 751) (reduce (attr (account_of_seed \"bob\" 752) \"public_key\" 752) 752) (reduce (attr (account_of_seed \"charlie\" 753) \"public_key\" 753) 753) (reduce (attr (account_of_seed \"dan\" 754) \"public_key\" 754) 754) (reduce (attr (account_of_seed \"eve\" 755) \"public_key\" 755) 755))) (signers_threshold (literal (intOrNat 3) 54)) (timelock (type_annotation (big_map 63 ) (bigmap \"nat\" (tuple \"timestamp\" (lambda \"unit\" (list \"operation\")))) 63)) (timelock_seconds (literal (nat 1) 759)))\nstorage_type (())\nmessages ((addExecutionRequest True ((set_type (params 111) (tuple (map \"key_hash\" \"signature\") (tuple \"chain_id\" (tuple \"nat\" (lambda \"unit\" (list \"operation\"))))) 113) (match_tuple 114 (params 111) \"match_pair_114_fst\" \"match_pair_114_snd\") (match_tuple 117 (variant_arg \"match_pair_114_snd\" 114) \"match_pair_117_fst\" \"match_pair_117_snd\") (match_tuple 118 (variant_arg \"match_pair_117_snd\" 117) \"match_pair_118_fst\" \"match_pair_118_snd\") (verify (eq (pack (type_annotation (variant_arg \"match_pair_117_fst\" 117) (unknown 49) 121) 121) (pack (type_annotation (chain_id) (unknown 49) 121) 121) 121) (literal (string \"BAD_CHAIN_ID\") 121) 121) (verify (eq (variant_arg \"match_pair_118_fst\" 118) (add (attr (data) \"nonce\" 124) (literal (intOrNat 1) 124) 124) 124) (literal (string \"BAD_NONCE\") 124) 124) (defineLocal \"valid_signatures_counter\" (literal (nat 0) 127) 127) (forGroup \"operator_public_key\" (attr (data) \"operator_public_keys\" 128) ((ifBlock (contains (variant_arg \"match_pair_114_fst\" 114) (hash_key (iter \"operator_public_key\" 128) 130) 131) ((ifBlock (check_signature (iter \"operator_public_key\" 128) (getItem (variant_arg \"match_pair_114_fst\" 114) (hash_key (iter \"operator_public_key\" 128) 130) 132) (pack (variant_arg \"match_pair_114_snd\" 114) 132) 132) ((set (getLocal \"valid_signatures_counter\" 765) (add (getLocal \"valid_signatures_counter\" 133) (literal (intOrNat 1) 133) 133) 133)) 132)) 131)) 128) (verify (ge (getLocal \"valid_signatures_counter\" 136) (attr (data) \"signers_threshold\" 136) 136) (literal (string \"TOO_FEW_SIGS\") 136) 136) (set (attr (data) \"nonce\" 124) (add (attr (data) \"nonce\" 124) (literal (intOrNat 1) 139) 139) 139) (set (getItem (attr (data) \"timelock\" 142) (attr (data) \"nonce\" 124) 142) (tuple 142 (now) (variant_arg \"match_pair_118_snd\" 118)) 142))) (execute True ((match_tuple 151 (getItem (attr (data) \"timelock\" 142) (params 148) 150) \"match_pair_151_fst\" \"match_pair_151_snd\") (verify (lt (add_seconds (variant_arg \"match_pair_151_fst\" 151) (toInt (attr (data) \"timelock_seconds\" 154) 154) 154) (now) 155) (literal (string \"TOO_EARLY\") 155) 155) (delItem (attr (data) \"timelock\" 142) (params 148) 158) (set_type (call_lambda (variant_arg \"match_pair_151_snd\" 151) (unit) 161) (list \"operation\") 162) (forGroup \"op\" (call_lambda (variant_arg \"match_pair_151_snd\" 151) (unit) 161) ((set (operations 163) (cons (iter \"op\" 163) (operations 163) 163) 163)) 163))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 765, "show": true, "accept_unknown_types": false}, {"action": "newContract", "id": 1, "export": "(storage (record 171 (admin (literal (local-address 0) 54)) (storedValue (literal (intOrNat 0) 171)))\nstorage_type (())\nmessages ((default True ()) (replace True ((verify (eq (sender) (attr (data) \"admin\" 179) 179) (literal (string \"NOT_ADMIN\") 179) 179) (set (attr (data) \"storedValue\" 180) (params 178) 180))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 772, "show": true, "accept_unknown_types": false}, {"action": "message", "id": 0, "message": "addExecutionRequest", "params": "(tuple 807 (map 807 ((reduce (attr (account_of_seed \"bob\" 752) \"public_key_hash\" 752) 752) (reduce (make_signature (reduce (attr (account_of_seed \"bob\" 752) \"secret_key\" 752) 752) (pack (tuple 794 (literal (chain_id_cst \"0x9caecab9\") 768) (tuple 794 (literal (intOrNat 1) 794) (lambda 0 \"\" 794 ((set_type (lambdaParams 0 \"\" 794 (unknown 53)) \"unit\" 777) (result (list 779 (transfer (literal (nat 1) 775) (literal (mutez 0) 780) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 778) \"Some\" \"None\" 778) 780)) 779))))) 794) \"Raw\" 796) 796)) ((reduce (attr (account_of_seed \"charlie\" 753) \"public_key_hash\" 753) 753) (reduce (make_signature (reduce (attr (account_of_seed \"charlie\" 753) \"secret_key\" 753) 753) (pack (tuple 794 (literal (chain_id_cst \"0x9caecab9\") 768) (tuple 794 (literal (intOrNat 1) 794) (lambda 0 \"\" 794 ((set_type (lambdaParams 0 \"\" 794 (unknown 53)) \"unit\" 777) (result (list 779 (transfer (literal (nat 1) 775) (literal (mutez 0) 780) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 778) \"Some\" \"None\" 778) 780)) 779))))) 794) \"Raw\" 797) 797)) ((reduce (attr (account_of_seed \"dan\" 754) \"public_key_hash\" 754) 754) (reduce (make_signature (reduce (attr (account_of_seed \"dan\" 754) \"secret_key\" 754) 754) (pack (tuple 794 (literal (chain_id_cst \"0x9caecab9\") 768) (tuple 794 (literal (intOrNat 1) 794) (lambda 0 \"\" 794 ((set_type (lambdaParams 0 \"\" 794 (unknown 53)) \"unit\" 777) (result (list 779 (transfer (literal (nat 1) 775) (literal (mutez 0) 780) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 778) \"Some\" \"None\" 778) 780)) 779))))) 794) \"Raw\" 798) 798))) (tuple 807 (literal (chain_id_cst \"0x9caecab9\") 768) (tuple 807 (literal (intOrNat 1) 807) (lambda 1 \"\" 807 ((set_type (lambdaParams 1 \"\" 807 (unknown 54)) \"unit\" 777) (result (list 779 (transfer (literal (nat 1) 775) (literal (mutez 0) 780) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 778) \"Some\" \"None\" 778) 780)) 779))))))", "line_no": 807, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "(literal (chain_id_cst \"0x9caecab9\") 768)", "time": "(literal (timestamp 123) 806)", "amount": "(literal (mutez 0) 1)", "level": "(literal (intOrNat 0) 807)", "show": true, "valid": "(literal (bool True) 807)", "voting_powers": "(map 807 )"}, {"action": "message", "id": 0, "message": "addExecutionRequest", "params": "(tuple 828 (map 828 ((reduce (attr (account_of_seed \"bob\" 752) \"public_key_hash\" 752) 752) (reduce (make_signature (reduce (attr (account_of_seed \"bob\" 752) \"secret_key\" 752) 752) (pack (tuple 815 (literal (chain_id_cst \"0x9caecab9\") 768) (tuple 815 (literal (intOrNat 2) 815) (lambda 2 \"\" 815 ((set_type (lambdaParams 2 \"\" 815 (unknown 55)) \"unit\" 785) (result (list 787 (transfer (literal (nat 2) 783) (literal (mutez 0) 788) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 786) \"Some\" \"None\" 786) 788)) 787))))) 815) \"Raw\" 817) 817)) ((reduce (attr (account_of_seed \"charlie\" 753) \"public_key_hash\" 753) 753) (reduce (make_signature (reduce (attr (account_of_seed \"charlie\" 753) \"secret_key\" 753) 753) (pack (tuple 815 (literal (chain_id_cst \"0x9caecab9\") 768) (tuple 815 (literal (intOrNat 2) 815) (lambda 2 \"\" 815 ((set_type (lambdaParams 2 \"\" 815 (unknown 55)) \"unit\" 785) (result (list 787 (transfer (literal (nat 2) 783) (literal (mutez 0) 788) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 786) \"Some\" \"None\" 786) 788)) 787))))) 815) \"Raw\" 818) 818)) ((reduce (attr (account_of_seed \"dan\" 754) \"public_key_hash\" 754) 754) (reduce (make_signature (reduce (attr (account_of_seed \"dan\" 754) \"secret_key\" 754) 754) (pack (tuple 815 (literal (chain_id_cst \"0x9caecab9\") 768) (tuple 815 (literal (intOrNat 2) 815) (lambda 2 \"\" 815 ((set_type (lambdaParams 2 \"\" 815 (unknown 55)) \"unit\" 785) (result (list 787 (transfer (literal (nat 2) 783) (literal (mutez 0) 788) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 786) \"Some\" \"None\" 786) 788)) 787))))) 815) \"Raw\" 819) 819))) (tuple 828 (literal (chain_id_cst \"0x9caecab9\") 768) (tuple 828 (literal (intOrNat 2) 828) (lambda 3 \"\" 828 ((set_type (lambdaParams 3 \"\" 828 (unknown 56)) \"unit\" 785) (result (list 787 (transfer (literal (nat 2) 783) (literal (mutez 0) 788) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 786) \"Some\" \"None\" 786) 788)) 787))))))", "line_no": 828, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "(literal (chain_id_cst \"0x9caecab9\") 768)", "time": "(literal (timestamp 123) 827)", "amount": "(literal (mutez 0) 1)", "level": "(literal (intOrNat 0) 828)", "show": true, "valid": "(literal (bool True) 828)", "voting_powers": "(map 828 )"}, {"action": "message", "id": 0, "message": "execute", "params": "(literal (intOrNat 1) 835)", "line_no": 835, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "", "time": "(add_seconds (literal (timestamp 123) 827) (mul (literal (nat 1) 759) (literal (intOrNat 2) 834) 834) 834)", "amount": "(literal (mutez 0) 1)", "level": "(literal (intOrNat 0) 835)", "show": true, "valid": "(literal (bool True) 835)", "voting_powers": "(map 835 )"}, {"action": "verify", "condition": "(eq (contains (attr (contractData 0 835) \"timelock\" 840) (literal (intOrNat 1) 840) 840) (literal (bool False) 840) 840)", "line_no": 840}, {"action": "verify", "condition": "(eq (contains (attr (contractData 0 835) \"timelock\" 840) (literal (intOrNat 2) 841) 841) (literal (bool True) 841) 841)", "line_no": 841}, {"action": "verify", "condition": "(eq (attr (contractData 1 772) \"storedValue\" 844) (literal (nat 1) 775) 844)", "line_no": 844}, {"action": "message", "id": 0, "message": "execute", "params": "(literal (intOrNat 2) 848)", "line_no": 848, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "", "time": "(add_seconds (add_seconds (literal (timestamp 123) 827) (mul (literal (nat 1) 759) (literal (intOrNat 2) 834) 834) 834) (mul (literal (nat 1) 759) (literal (intOrNat 2) 847) 847) 847)", "amount": "(literal (mutez 0) 1)", "level": "(literal (intOrNat 0) 848)", "show": true, "valid": "(literal (bool True) 848)", "voting_powers": "(map 848 )"}, {"action": "verify", "condition": "(eq (contains (attr (contractData 0 848) \"timelock\" 853) (literal (intOrNat 1) 853) 853) (literal (bool False) 853) 853)", "line_no": 853}, {"action": "verify", "condition": "(eq (contains (attr (contractData 0 848) \"timelock\" 853) (literal (intOrNat 2) 854) 854) (literal (bool False) 854) 854)", "line_no": 854}, {"action": "verify", "condition": "(eq (attr (contractData 1 772) \"storedValue\" 844) (literal (nat 2) 783) 857)", "line_no": 857}]}, {"shortname": "addExecutionRequest_-_does_not_count_invalid_signatures", "longname": "addExecutionRequest - does not count invalid signatures", "scenario": [{"action": "newContract", "id": 0, "export": "(storage (record 54 (nonce (literal (nat 0) 55)) (operator_public_keys (list 54 (reduce (attr (account_of_seed \"alice\" 487) \"public_key\" 487) 487) (reduce (attr (account_of_seed \"bob\" 488) \"public_key\" 488) 488) (reduce (attr (account_of_seed \"charlie\" 489) \"public_key\" 489) 489))) (signers_threshold (literal (intOrNat 3) 54)) (timelock (type_annotation (big_map 63 ) (bigmap \"nat\" (tuple \"timestamp\" (lambda \"unit\" (list \"operation\")))) 63)) (timelock_seconds (literal (nat 3600) 51)))\nstorage_type (())\nmessages ((addExecutionRequest True ((set_type (params 111) (tuple (map \"key_hash\" \"signature\") (tuple \"chain_id\" (tuple \"nat\" (lambda \"unit\" (list \"operation\"))))) 113) (match_tuple 114 (params 111) \"match_pair_114_fst\" \"match_pair_114_snd\") (match_tuple 117 (variant_arg \"match_pair_114_snd\" 114) \"match_pair_117_fst\" \"match_pair_117_snd\") (match_tuple 118 (variant_arg \"match_pair_117_snd\" 117) \"match_pair_118_fst\" \"match_pair_118_snd\") (verify (eq (pack (type_annotation (variant_arg \"match_pair_117_fst\" 117) (unknown 57) 121) 121) (pack (type_annotation (chain_id) (unknown 57) 121) 121) 121) (literal (string \"BAD_CHAIN_ID\") 121) 121) (verify (eq (variant_arg \"match_pair_118_fst\" 118) (add (attr (data) \"nonce\" 124) (literal (intOrNat 1) 124) 124) 124) (literal (string \"BAD_NONCE\") 124) 124) (defineLocal \"valid_signatures_counter\" (literal (nat 0) 127) 127) (forGroup \"operator_public_key\" (attr (data) \"operator_public_keys\" 128) ((ifBlock (contains (variant_arg \"match_pair_114_fst\" 114) (hash_key (iter \"operator_public_key\" 128) 130) 131) ((ifBlock (check_signature (iter \"operator_public_key\" 128) (getItem (variant_arg \"match_pair_114_fst\" 114) (hash_key (iter \"operator_public_key\" 128) 130) 132) (pack (variant_arg \"match_pair_114_snd\" 114) 132) 132) ((set (getLocal \"valid_signatures_counter\" 499) (add (getLocal \"valid_signatures_counter\" 133) (literal (intOrNat 1) 133) 133) 133)) 132)) 131)) 128) (verify (ge (getLocal \"valid_signatures_counter\" 136) (attr (data) \"signers_threshold\" 136) 136) (literal (string \"TOO_FEW_SIGS\") 136) 136) (set (attr (data) \"nonce\" 124) (add (attr (data) \"nonce\" 124) (literal (intOrNat 1) 139) 139) 139) (set (getItem (attr (data) \"timelock\" 142) (attr (data) \"nonce\" 124) 142) (tuple 142 (now) (variant_arg \"match_pair_118_snd\" 118)) 142))) (execute True ((match_tuple 151 (getItem (attr (data) \"timelock\" 142) (params 148) 150) \"match_pair_151_fst\" \"match_pair_151_snd\") (verify (lt (add_seconds (variant_arg \"match_pair_151_fst\" 151) (toInt (attr (data) \"timelock_seconds\" 154) 154) 154) (now) 155) (literal (string \"TOO_EARLY\") 155) 155) (delItem (attr (data) \"timelock\" 142) (params 148) 158) (set_type (call_lambda (variant_arg \"match_pair_151_snd\" 151) (unit) 161) (list \"operation\") 162) (forGroup \"op\" (call_lambda (variant_arg \"match_pair_151_snd\" 151) (unit) 161) ((set (operations 163) (cons (iter \"op\" 163) (operations 163) 163) 163)) 163))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 499, "show": true, "accept_unknown_types": false}, {"action": "newContract", "id": 1, "export": "(storage (record 171 (admin (literal (local-address 0) 54)) (storedValue (literal (intOrNat 0) 171)))\nstorage_type (())\nmessages ((default True ()) (replace True ((verify (eq (sender) (attr (data) \"admin\" 179) 179) (literal (string \"NOT_ADMIN\") 179) 179) (set (attr (data) \"storedValue\" 180) (params 178) 180))))\nflags ()\nglobals ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())", "line_no": 506, "show": true, "accept_unknown_types": false}, {"action": "message", "id": 0, "message": "addExecutionRequest", "params": "(tuple 534 (map 534 ((reduce (attr (account_of_seed \"charlie\" 489) \"public_key_hash\" 489) 489) (reduce (make_signature (reduce (attr (account_of_seed \"charlie\" 489) \"secret_key\" 489) 489) (pack (tuple 518 (literal (chain_id_cst \"0x9caecab9\") 502) (tuple 518 (literal (intOrNat 1) 518) (lambda 0 \"\" 518 ((set_type (lambdaParams 0 \"\" 518 (unknown 61)) \"unit\" 511) (result (list 513 (transfer (literal (intOrNat 1) 513) (literal (mutez 0) 513) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 512) \"Some\" \"None\" 512) 513)) 513))))) 518) \"Raw\" 520) 520)) ((reduce (attr (account_of_seed \"dan\" 490) \"public_key_hash\" 490) 490) (reduce (make_signature (reduce (attr (account_of_seed \"dan\" 490) \"secret_key\" 490) 490) (pack (tuple 518 (literal (chain_id_cst \"0x9caecab9\") 502) (tuple 518 (literal (intOrNat 1) 518) (lambda 0 \"\" 518 ((set_type (lambdaParams 0 \"\" 518 (unknown 61)) \"unit\" 511) (result (list 513 (transfer (literal (intOrNat 1) 513) (literal (mutez 0) 513) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 512) \"Some\" \"None\" 512) 513)) 513))))) 518) \"Raw\" 521) 521)) ((reduce (attr (account_of_seed \"eve\" 491) \"public_key_hash\" 491) 491) (reduce (make_signature (reduce (attr (account_of_seed \"eve\" 491) \"secret_key\" 491) 491) (pack (tuple 518 (literal (chain_id_cst \"0x9caecab9\") 502) (tuple 518 (literal (intOrNat 1) 518) (lambda 0 \"\" 518 ((set_type (lambdaParams 0 \"\" 518 (unknown 61)) \"unit\" 511) (result (list 513 (transfer (literal (intOrNat 1) 513) (literal (mutez 0) 513) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 512) \"Some\" \"None\" 512) 513)) 513))))) 518) \"Raw\" 522) 522))) (tuple 534 (literal (chain_id_cst \"0x9caecab9\") 502) (tuple 534 (literal (intOrNat 1) 534) (lambda 1 \"\" 534 ((set_type (lambdaParams 1 \"\" 534 (unknown 62)) \"unit\" 511) (result (list 513 (transfer (literal (intOrNat 1) 513) (literal (mutez 0) 513) (openVariant (contract \"replace\" \"nat\" (literal (local-address 1) 171) 512) \"Some\" \"None\" 512) 513)) 513))))))", "line_no": 534, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "(literal (chain_id_cst \"0x9caecab9\") 502)", "time": "(literal (timestamp 123) 531)", "amount": "(literal (mutez 0) 1)", "level": "(literal (intOrNat 0) 534)", "show": true, "valid": "(literal (bool False) 534)", "voting_powers": "(map 534 )"}]}]